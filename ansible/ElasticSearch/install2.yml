- name: Configure Elasticsearch Nodes
  hosts: all
  become: yes
  vars:
    environment: "dev"  # Puedes ajustar el entorno según sea necesario
  tasks:
    - name: Debug environment variables
      debug:
        msg: "NUM_NODES is {{ lookup('env', 'NUM_NODES') }} and PRIVATE_IP is {{ lookup('env', 'PRIVATE_IP') }}"

    # Tarea 1: Generar un nombre único para el nodo
    - name: Generate unique NODE_NAME
      set_fact:
        NODE_NAME: "{{ lookup('env', 'PRIVATE_IP') | regex_replace('\\.', '-') }}-node-{{ inventory_hostname }}"

    # Tarea 2: Generar lista de seed_hosts
    - name: Generate seed_hosts list with DNS names
      set_fact:
        SEED_HOSTS: "{{ SEED_HOSTS | default([]) + ['i' + (item|string) + '-demo-rss-engine-demo.campusdual.mkcampus.com'] }}"
      with_sequence: start=0 end={{ lookup('env', 'NUM_NODES') | int - 1 }}
      loop_control:
        loop_var: item
    
    # Tarea 3: Generar lista de seed_hosts excluyendo el nodo con el índice especificado
    - name: Generate seed_hosts excluding the node with the index
      set_fact:
        SEED_HOSTS_EXCLUDED: "{{ SEED_HOSTS | selectattr('search', 'not match', 'i' + index|string + '-demo') | list }}"
      

    # Tarea 3: Verificar la lista generada de seed_hosts
    - name: Debug seed_hosts list
      debug:
        msg: 
          - "Generated seed_hosts: {{ SEED_HOSTS }}"
          - "Generated seed_hosts_excluded: {{ SEED_HOSTS_EXCLUDED }}"

    # Tarea 4: Generar el archivo docker-compose.yml desde la plantilla
    - name: Generate docker-compose.yml from template
      template:
        src: /ansible/playbooks/docker-compose.yml.j2
        dest: /home/ubuntu/docker-compose.yml
        mode: '0644'

    # Tarea 5: Iniciar Elasticsearch en segundo plano utilizando Docker Compose
    - name: Start Elasticsearch with Docker Compose
      command: docker compose up -d
      args:
        chdir: /home/ubuntu
