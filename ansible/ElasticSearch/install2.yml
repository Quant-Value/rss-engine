- name: Configure Elasticsearch Nodes
  hosts: all
  become: yes
  vars:
    environment: "dev"  # Puedes ajustar el entorno segÃºn sea necesario
  tasks:
    - name: Debug environment variables
      debug:
        msg: "NUM_NODES is {{ lookup('env', 'NUM_NODES') }} and the index is {{ lookup('env', 'INDEX') }}"

    # Cargar la variable INDEX desde el entorno y guardarla en una nueva variable
    - name: Set the INDEX variable
      set_fact:
        INDEX_VAR: "{{ lookup('env', 'INDEX') }}"

    - name: Retrieve secret from AWS Secrets Manager
      command: >
        aws secretsmanager get-secret-value --secret-id "rss-engine-imatia" --query SecretString --output text
      register: secret_value

    - name: Set the password as a variable
      set_fact:
        elasticpass: "{{ secret_value.stdout | from_json | json_query('elasticpass') }}"

    - name: Generate seed_hosts list with DNS names
      set_fact:
        SEED_HOSTS: "{{ SEED_HOSTS | default([]) + ['i' + (item|string) + '-demo-rss-engine-demo.campusdual.mkcampus.com'] }}"
      with_sequence: start=0 end={{ lookup('env', 'NUM_NODES') | int - 1 }}
      loop_control:
        loop_var: item

    - name: Generate excluded host
      set_fact:
        EXCLUDE_HOST: "{{ ['i', INDEX_VAR, '-demo-rss-engine-demo.campusdual.mkcampus.com'] | join('') }}"

    
    - name: Generate seed_hosts excluding the node with the index
      set_fact:
        SEED_HOSTS_EXCLUDED: "{{ SEED_HOSTS | reject('equalto', EXCLUDE_HOST) | list }}"


    # Tarea 3: Verificar la lista generada de seed_hosts
    - name: Debug seed_hosts list
      debug:
        msg: 
          - "Generated seed_hosts: {{ SEED_HOSTS }}"
          - "Generated seed_hosts_excluded: {{ SEED_HOSTS_EXCLUDED }}"

    # Tarea 4: Generar el archivo docker-compose.yml desde la plantilla
    - name: Generate docker-compose.yml from template
      template:
        src: /ansible/playbooks/docker-compose.yml.j2
        dest: /home/ubuntu/docker-compose.yml
        mode: '0644'

    # Tarea 5: Iniciar Elasticsearch en segundo plano utilizando Docker Compose
    - name: Start Elasticsearch with Docker Compose
      command: docker compose up -d
      args:
        chdir: /home/ubuntu
