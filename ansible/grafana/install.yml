- hosts: localhost
  connection: local
  become: true
  tasks:
  - name: Actualizar todos los paquetes a la última versión
    apt:
      update_cache: yes
      upgrade: dist
      autoremove: yes
      autoclean: yes

  - name: Instalar paquetes del sistema necesarios (Skip AWS CLI, Docker, Docker Compose)
    apt:
      name:
      - unzip
      - apt-transport-https
      - ca-certificates
      - curl
      - software-properties-common
      state: latest
      update_cache: true

  - name: Verificar si AWS CLI está instalado
    command: aws --version
    register: aws_cli_installed
    ignore_errors: true # Ignora errores si AWS CLI no está instalado

  - name: Instalar AWS CLI
    shell: |
      curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
      unzip awscliv2.zip
      ./aws/install
    when: aws_cli_installed.rc != 0 # Solo se ejecuta si AWS CLI no está instalado

  - name: Crear directorio para llaves de Docker (if not already done)
    file:
      path: /etc/apt/keyrings
      state: directory
      mode: '0755'

  - name: Descargar la clave GPG de Docker (if not already done)
    command:
      cmd: curl -fsSL https://download.docker.com/linux/debian/gpg -o /etc/apt/keyrings/docker.asc

  - name: Agregar el repositorio de Docker al archivo docker.list (if not already done)
    shell: |
      echo \
        "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/debian \
        $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
        tee /etc/apt/sources.list.d/docker.list > /dev/null
    args:
      executable: /bin/bash

  - name: Actualizar índice de apt (if not already done)
    apt:
      update_cache: yes

  - name: Install Docker Compose
    become: yes
    apt:
      name: docker-compose
      state: latest
      update_cache: yes

  - name: Instalar Docker y sus componentes
    apt:
      name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin
      state: latest

  - name: Add remote "demisto" user to "docker" group
    user:
      name: demisto
      groups: docker
      append: yes

  - name: Reiniciar el servicio Docker (if not already restarted in user_data)
    service:
      name: docker
      state: restarted

- name: Configure EC2 Node with Grafana
  hosts: localhost
  connection: local
  become: yes
  tasks:

  - name: Ensure the directory for playbooks exists
    ansible.builtin.file:
      path: /home/ubuntu/playbooks
      state: directory
      mode: '0755'

  - name: Ensure the directory exists for Grafana repository
    file:
      path: /home/ubuntu/grafana
      state: directory
      mode: '0755'

  - name: Copy Repository (docker-compose.yml)
    ansible.builtin.git:
      repo: https://github.com/campusdualdevopsGrupo2/imatia-rss-engine.git
      dest: /home/ubuntu/grafana
      version: "main"
      force: yes

  - name: Set correct permissions for the Grafana directory
    become: yes
    file:
      path: "/home/ubuntu/grafana"
      owner: "472"
      group: "472"
      mode: "0755"
      recurse: yes

  - name: Ensure required directories exist
    ansible.builtin.file:
      path: "/home/ubuntu/grafana/config"
      state: directory
      mode: '0755'

  - name: Copy docker-compose.yml to the correct location
    ansible.builtin.copy:
      src: /home/ubuntu/grafana/ansible/grafana/docker-compose.yml
      dest: /home/ubuntu/grafana/config/docker-compose.yml

- name: Configure EC2 Node
  hosts: localhost
  become: yes
  tasks:

  # - name: Stop running containers with Docker Compose
  #   command: docker compose down
  #   args:
  #     chdir: /home/ubuntu/grafana

  - name: Start containers with Docker Compose
    command: docker-compose up -d
    args:
      chdir: /home/ubuntu/grafana/config
